{"config":{"lang":["fr"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Nano-ordinateur","text":"<p>Bienvenue sur le site du cours de Nano-ordinateurs  du c\u00e9gep de Victoriaville. Cette plateforme se veut un compl\u00e9ment au groupe Teams du m\u00eame cours. Vous y retrouverez les notes de cours et les diff\u00e9rents exercices. Nous ajoutons continuellement du nouveau contenu, assurez-vous donc de revenir nous voir souvent.</p>"},{"location":"#pour-joindre-votre-enseignant","title":"Pour joindre votre enseignant","text":"<p>S\u00e9bastien Trottier</p><p>trottier.sebastien@cegepvicto.ca</p>"},{"location":"exercices/ex01_enonce/","title":"Exercice 01 - Un peu de recherche","text":"<p>Question de plonger dans le monde des nano-ordinateurs, je vous laisse faire un peu de recherche sur le sujet. R\u00e9pondez aux questions suivantes dans le formulaire disponible ici : Liens</p>"},{"location":"exercices/ex02_enonce/","title":"Exercice 02 - RetroPie","text":"<p>Pour notre premier projet avec un raspberry Pi on va le transformer en plate-forme de r\u00e9trogaming avec la distribution RetroPie. </p>"},{"location":"exercices/ex02_enonce/#objectifs","title":"Objectifs","text":""},{"location":"exercices/ex02_enonce/#materiel-requis","title":"Mat\u00e9riel requis","text":"<ul> <li>Un raspberry Pi</li> <li>Raspberry Pi Imager</li> <li>Une carte microSD</li> <li>Une manette de jeu USB</li> </ul>"},{"location":"exercices/ex02_enonce/#marche-a-suivre","title":"Marche \u00e0 suivre","text":""},{"location":"exercices/ex02_enonce/#installer-retropie","title":"Installer RetroPie","text":"<p>Utilisez le logiciel Raspberry Pi Imager pour faire l'installation. Au lieu de choisir RetroPie dans la liste des OS disponibles utilisez l'image que je vais vous fournir. Vous pouvez aussi la t\u00e9l\u00e9charger ici : liens </p> <p>Danger</p> <p>Conservez le nom d'usager (<code>pi</code>) et le mot de passe (<code>raspberry</code>) par d\u00e9faut lors de l'installation de l'image de RetroPie sinon l'installation ne se fera pas correctement.</p>"},{"location":"exercices/ex02_enonce/#configuration","title":"Configuration","text":""},{"location":"exercices/ex02_enonce/#manette","title":"Manette","text":"<p>Ins\u00e9rez la carte SD dans le pi, branchez la manette de jeu et lancez le syst\u00e8me. Suivez les instructions \u00e0 l'\u00e9cran pour configurer la manette.</p>"},{"location":"exercices/ex02_enonce/#wifi","title":"Wifi","text":"<p>S\u00e9lectionnez configuration dans le menu et ensuite Wifi. </p> <p>Vous devrez indiquer le WLAN COUNTRY, suivez les \u00e9tapes dans Localisation Options &gt; WLAN Country &gt; Canada</p> <p>Le r\u00e9seau wifi qu'on va utiliser est <code>Domotique-Pedago</code>, je vais vous donner le mot de passe en classe. Notez l'adresse ip de votre Pi.</p>"},{"location":"exercices/ex02_enonce/#mise-a-jour","title":"Mise \u00e0 jour","text":"<p>Faites la mise \u00e0 jour de votre installation. Il y a une option dans le menu de configuration, je vous laisse chercher un peu.</p>"},{"location":"exercices/ex02_enonce/#activez-ssh","title":"Activez SSH","text":"<p>On va transf\u00e9rer nos jeux via SSH. Par d\u00e9faut il est d\u00e9sactiv\u00e9 sur Retropie, vous devez trouver comment le r\u00e9activer. Maintenant vous pouvez vous connecter \u00e0 votre pi avec un client SSH, moi j'utilise Putty</p>"},{"location":"exercices/ex02_enonce/#transferer-des-jeux","title":"Transf\u00e9rer des jeux","text":"<p>Je vous ai pr\u00e9par\u00e9 une petite s\u00e9lection de jeux NES que vous pouvez t\u00e9l\u00e9charger ici. Avec Retropie les jeux doivent \u00eatre copi\u00e9s dans le r\u00e9pertoire correspondant \u00e0 leur plateforme. Dans notre cas ce sera le r\u00e9pertoire <code>/home/pi/RetroPie/roms/nes</code>. Il y a plusieurs fa\u00e7ons de transf\u00e9rer les fichiers. \u00c9tant donn\u00e9 que le SSH est activ\u00e9 sur le pi, je veux que vous utilisiez scp ou sftp en console.</p>"},{"location":"exercices/ex02_enonce/#changez-lecran-de-demarrage","title":"Changez l'\u00e9cran de d\u00e9marrage","text":"<p>Changez l'\u00e9cran de d\u00e9marrage de Retropie. Vous pouvez utiliser une des images ou vid\u00e9os fournies ou pour aller plus loin importer votre propre image.</p>"},{"location":"exercices/ex02_enonce/#jouez","title":"Jouez!!","text":"<p>C'est maintenant le temps de tester votre machine de r\u00e9trogaming, amusez-vous.</p>"},{"location":"exercices/ex02_enonce/#ressources","title":"Ressources","text":"<ul> <li>Documentation de Retropie</li> </ul>"},{"location":"exercices/ex03_enonce/","title":"Exercice 03 - Exploration Raspberry pi et Linux","text":"<p>Dans cet exercice on va aller un peu plus loin dans l'exploration de Raspberry Pi os. </p>"},{"location":"exercices/ex03_enonce/#configuration-initiale","title":"Configuration initiale","text":""},{"location":"exercices/ex03_enonce/#installation-de-raspberry-pi-os","title":"Installation de Raspberry Pi OS","text":"<ul> <li>Sur une carte microSD installer Raspberry Pi OS Lite \u00e0 l'aide de Raspberry Pi Imager sans effectuer de configuration avanc\u00e9e (Pas de cr\u00e9ation d'usager, de configuration du WiFi, etc.)</li> </ul>"},{"location":"exercices/ex03_enonce/#configuration-au-premier-demarrage","title":"Configuration au premier d\u00e9marrage","text":"<p>Lors du premier d\u00e9marrage, effectuer les configurations suivantes : </p> <ul> <li>L'usager et le mot de passe.</li> <li>La langue du clavier.</li> <li>Ajuster le timezone sur <code>Montreal</code>.</li> </ul>"},{"location":"exercices/ex03_enonce/#a-faire","title":"\u00c0 faire","text":"<p>Notez dans un fichier texte les commandes, packages et logiciels que vous avez utilis\u00e9s pour r\u00e9aliser les points suivants.</p>"},{"location":"exercices/ex03_enonce/#configuration-du-wifi","title":"Configuration du Wifi","text":"<ul> <li>Configurez le wifi (nmtui) pour les r\u00e9seaux <code>Domotique-Pedago</code> et <code>TechInfo</code>. <ul> <li>Affichez les interfaces r\u00e9seaux du Pi.</li> <li>Trouvez l'adresse de gateway</li> <li>Trouvez la ou les adresses des serveurs DNS (Domain server)</li> <li>Configurez une adresse ip fixe. Le professeur nous fournira l`adresse IP \u00e0 utiliser. </li> <li>Configure le Default Gateway et le DNS pour l'adresse IP fixe</li> <li>nmtui requiert un service network-manager restart</li> </ul> </li> </ul>"},{"location":"exercices/ex03_enonce/#ssh","title":"SSH","text":"<ul> <li>Activez SSH sur le PI</li> <li>Essayer de vous connecter depuis le terminal windows.</li> </ul>"},{"location":"exercices/ex03_enonce/#gestion-des-usagers","title":"Gestion des usagers","text":"<ul> <li>Listez tous les usagers <code>cat /etc/passwd</code></li> <li>Modifiez le nom et le mot de passe votre usager.</li> <li>Affichez les groups de permissions auxquels votre usager appartient.</li> <li>Ajoutez un nouvel usager.</li> <li>Changez d'utilisateur pour celui que vous venez de cr\u00e9er.</li> <li>Essayez de cr\u00e9er le fichier test.txt dans le r\u00e9pertoire /home de votre utilisateur principal.</li> <li>Donnez les permissions sudo \u00e0 votre nouvel usager. </li> <li>Refaite le test de cr\u00e9er un le fichier test.txt dans le r\u00e9pertoire /home de votre utilisateur principal.</li> </ul>"},{"location":"exercices/ex03_enonce/#mise-a-jour-de-packages","title":"Mise \u00e0 jour de packages","text":"<ul> <li>Mettre \u00e0 jour la liste des repository</li> <li>Appliquez les mise \u00e0 jour si n\u00e9cessaire</li> <li>Supprimez les fichiers non n\u00e9cessaire qui ont \u00e9t\u00e9 cr\u00e9\u00e9s durant l'update</li> <li>Red\u00e9marrez le syst\u00e8me</li> </ul>"},{"location":"exercices/ex03_enonce/#installation-de-package","title":"Installation de package","text":"<ul> <li>Installez tldr et le mettre \u00e0 jour<ul> <li>Prenez le temps de tester la commande tldr</li> </ul> </li> <li>Listez tous les packages install\u00e9s</li> <li>Installez le package <code>SL</code> https://itsfoss.com/ubuntu-terminal-train/<ul> <li>Cr\u00e9ez un alias pour remplacer la commande ls par sl.</li> <li>L'alias doit \u00eatre persistant, red\u00e9marrer le pi pour le tester.</li> <li>Maintenant vous pouvez supprimer l'alias.</li> <li>Supprimer aussi l'application SL </li> </ul> </li> <li>Installez un des ces jeux pour prendre une petite pause : https://itsfoss.com/best-command-line-games-linux/</li> </ul>"},{"location":"exercices/ex03_enonce/#terminal-virtuel","title":"Terminal virtuel","text":"<ul> <li>Ouvrez un nouveau teminal virtuelle</li> <li>Basculer vers le premier.</li> <li>Fermez le deuxi\u00e8me terminal.</li> </ul>"},{"location":"exercices/ex03_enonce/#terminer-un-processus","title":"Terminer un processus","text":"<ul> <li>Lancez un des jeux que vous avez install\u00e9.</li> <li>Sans le quitter, ouvrez un nouveau terminal.</li> <li>Retrouvez le id du processus du jeu et terminez le.</li> <li>Fermez le terminal et revenez \u00e0 celui de d\u00e9part pour voir si le processus a bien \u00e9t\u00e9 termin\u00e9.</li> </ul>"},{"location":"exercices/ex03_enonce/#brancher-une-cle-usb-optionnel","title":"Brancher une cl\u00e9 usb (optionnel)","text":"<ul> <li>Branchez une cl\u00e9 usb dans votre Pi et faites le n\u00e9cessaire pour qu'elle soit \"mont\u00e9e\" sur le r\u00e9pertoire <code>/mnt/cle_usb</code></li> <li>Essayer les deux m\u00e9thodes d\u00e9crites dans cet article : https://raspberrytips.com/mount-usb-drive-raspberry-pi/ Attention j'ai eu \u00e0 changer les options de la commande <code>mount</code></li> </ul>"},{"location":"exercices/ex03_enonce/#partage-de-fichier-avec-le-pi-optionnel","title":"Partage de fichier avec le Pi (optionnel)","text":"<p>Vous devez partager un r\u00e9pertoire de votre Pi pour que vous puissiez y acc\u00e9der depuis votre portable sous Windows.</p> <ul> <li>Installez Samba</li> <li>Cr\u00e9ez un r\u00e9pertoire shared \u00e0 la racine de votre Pi <code>/shared</code> qui pourra \u00eatre modifi\u00e9 par tous les usagers.</li> <li>Partager ce r\u00e9pertoire en lecture et \u00e9criture</li> <li>Cr\u00e9ez aussi un deuxi\u00e8me partage pour la cl\u00e9 usb que vous avez mont\u00e9e plus t\u00f4t.</li> <li>Le tout devrait \u00eatre accessible depuis votre portable (Connectez un lecteur r\u00e9seau)</li> </ul>"},{"location":"exercices/ex04_enonce/","title":"Exercice 04 - Sense Hat Dice","text":"<p>Exercice 04 - Sense Hat Dice</p> <p>Dans cet exercice vous devez transformer votre Sense Hat en un simulateur de lanc\u00e9s de d\u00e9 \u00e0 six faces. </p> <ul> <li>\u00c0 chaque fois qu'on clique sur le joystick, g\u00e9n\u00e9rez un nombre al\u00e9atoirement entre 1 et 6.</li> <li>Affichez ce nombre sous forme de points comme sur un vrai d\u00e9.</li> <li>La couleur doit aussi changer de fa\u00e7on al\u00e9atoire entre chaque jet.</li> </ul> <p>Voici un petit exemple du r\u00e9sultat. Dans la vid\u00e9o le lancement est d\u00e9clench\u00e9e par une secousse du Sense Hat, nous \u00e7a sera par un clic.</p>"},{"location":"exercices/ex05_enonce/","title":"Exercice 05 - Sense Hat - Afficher les donn\u00e9es","text":"<p>\u00c0 l'aide des capteurs de temp\u00e9rature, de pression et d'humidit\u00e9, faites afficher dans des \u00e9crans s\u00e9par\u00e9s les valeurs de chacun.</p>"},{"location":"exercices/ex05_enonce/#ecran-temperature","title":"\u00c9cran temp\u00e9rature","text":"<ul> <li>Sur les deux premi\u00e8res colonnes de LEDs, affichez une jauge qui sera remplie en fonction de la temp\u00e9rature. Si la temp\u00e9rature est au minimum de ce qui peut \u00eatre capt\u00e9, la jauge est vide. Si on est au maximum les 8 points des 2 premi\u00e8res colonnes sont remplis. Entre les deux \u00e7a sera un ratio.</li> <li>Dans l'espace restant sur la matrice de DELs, affichez la lettre T pour Temp\u00e9rature.</li> <li>Si on clique sur le joystick, affichez le texte : \"Temp\u00e9rature 12 C\" o\u00f9 12 est la valeur saisie. Revenez ensuite \u00e0 l'affichage de l'\u00e9cran.</li> </ul>"},{"location":"exercices/ex05_enonce/#ecran-humidite-et-pression","title":"\u00c9cran humidit\u00e9 et pression","text":"<ul> <li>Pour ces deux \u00e9crans, afficher la lettre H ou P tout simplement.</li> <li>Si on clique sur le joystick, affichez le texte : \"Humidit\u00e9\" ou \"Pression\" suivi de la valeur saisie. Revenez ensuite \u00e0 l'affichage de l'\u00e9cran.</li> </ul>"},{"location":"exercices/ex05_enonce/#navigation-entre-les-ecrans","title":"Navigation entre les \u00e9crans","text":"<ul> <li>Les touches gauche et droite nous font passer d'un \u00e9cran \u00e0 l'autre.</li> <li>L'ordre des \u00e9crans est \"Temp\u00e9rature\" - \"Humidit\u00e9\" - \"Pression\"</li> <li>Si on est sur pression et qu'on entre droite, on revient \u00e0 temp\u00e9rature. La m\u00eame chose dans l'autre sens.</li> <li>Chaque \u00e9cran doit avoir une couleur de caract\u00e8re diff\u00e9rente.</li> </ul>"},{"location":"exercices/ex06_enonce/","title":"Exercice 06 - Une DEL qui clignote","text":"<p>Vous devez produire un sketch Arduino pour l'ESP32 qui va ex\u00e9cuter les points suivants:</p> <ol> <li>Vous devez faire clignoter la DEL du ESP32 selon la fr\u00e9quence que vous d\u00e9sirez.</li> <li>D\u00e9marrer le clignotement de la LED ou arr\u00eater-le en envoyant une commande par le port s\u00e9rie. <code>ON</code> pour d\u00e9marrer et <code>OFF</code> pour l'arr\u00eater.</li> <li>Ajoutez une troisi\u00e8me commande qui va permettre d'ajuster le temps d'attente entre les clignotements de la DEL. La commande sera DELx o\u00f9 x repr\u00e9sente un entier en millisecondes. (<code>DEL1500</code> par exemple).</li> <li>Quand vous envoyez une des trois commandes elle doivent \u00eatre appliqu\u00e9es imm\u00e9diatement au traitement. Par exemple si la DEL est allum\u00e9e, clignote sur un intervalle de 2 secondes et que vous lancer la commande OFF elle devra s'\u00e9teindre aussit\u00f4t. Utilisez la bonne m\u00e9thode pour g\u00e8rer le temps d'attente.</li> </ol> <p>Indices - Ne pas utiliser delay() - Serial.setTimeout()</p> <p>Quand vous avez termin\u00e9 montrez-moi fi\u00e8rement votre r\u00e9sultat.</p>"},{"location":"exercices/ex07_enonce/","title":"Exercice 07 - Boutons et DELs","text":"<p>L'objectif de cet exercice est de cr\u00e9er un montage qui contiendra deux boutons et deux DELs. Chaque bouton contr\u00f4lera une DEL diff\u00e9rente. Au d\u00e9marrage du programme les DELs sont \u00e9teintes. Si on clique sur un bouton, sa DEL s'allumera. Un second clique la fermera.</p> <p>La lecture des boutons doit tenir compte de l'effet de \"debounce\". Pour simplifier votre code utilisez la librairie disponible \u00e0 cette page : https://arduinogetstarted.com/tutorials/arduino-button-library</p> <p>Pr\u00e9sentez-moi votre montage final en action.</p>"},{"location":"exercices/ex08_enonce/","title":"Exercice 08 - Servomoteur","text":"<p>L'objectif de cet exercice est d'explorer par vous-m\u00eame le fonctionnement d'un servomoteur. Vous devez faire un montage avec un servomoteur et un potentiom\u00eatre. L'angle de rotation du servomoteur sera d\u00e9termin\u00e9 par la valeur du potentiom\u00eatre et une modification de celle-ci entrainera la rotation du servomoteur.</p> <p>Dans votre sketch je veux que vous m'inscriviez en commentaire les sources o\u00f9 vous avez r\u00e9cup\u00e9r\u00e9es vos informations (url des sites consult\u00e9s). Une fois l'exercice termin\u00e9 remettez moi le sketch dans le devoir sur Teams.</p> <p></p>"},{"location":"exercices/ex09_enonce/","title":"Exercice 09 - Le jeu Simon","text":"<p>Dans cet exercice on va reproduire le jeu Simon avec notre ESP32. Si vous ne connaissez pas le jeu, vous en avez un aper\u00e7u ici : https://fr.wikipedia.org/wiki/Simon_(jeu)</p> <p>On va simplifier le montage en n'utilisant que deux couleurs pour notre jeu: jaune et bleu. </p>"},{"location":"exercices/ex09_enonce/#principe-du-jeu","title":"Principe du jeu","text":"<p>Le jeu consiste \u00e0 reproduire une suite de couleur g\u00e9n\u00e9r\u00e9e al\u00e9atoirement. La suite commence par une seule couleur et un nouvel \u00e9l\u00e9ment s'ajoute \u00e0 chaque fois que le joueur r\u00e9ussi \u00e0 reproduire la suite. Exemple : </p> <ul> <li>Premier round : jaune. </li> <li>Deuxi\u00e8me round : jaune, jaune</li> <li>Troisi\u00e8me round : jaune, jaune, bleu</li> <li>Etc.</li> </ul> <p>Le but du jeu est d'atteindre le round le plus \u00e9lev\u00e9. Le jeu se termine quand on atteint le niveau 100.</p>"},{"location":"exercices/ex09_enonce/#montage","title":"Montage","text":"<p>Pour notre jeu, nous allons faire un montage avec : </p> <ul> <li>Un \u00e9cran LCD</li> <li>Une DEL jaune et une DEL bleu</li> <li>Un bouton jaune et un bouton bleu</li> </ul> <p>Attention</p> <pre><code>Vous devez tenir compte de l'effet de *debounce* sur vos boutons\n</code></pre>"},{"location":"exercices/ex09_enonce/#deroulement-du-jeu","title":"D\u00e9roulement du jeu","text":""},{"location":"exercices/ex09_enonce/#ecran-de-demarrage","title":"\u00c9cran de d\u00e9marrage","text":"<ul> <li>Au d\u00e9marrage, sur l'\u00e9cran LCD on affiche sur la premi\u00e8re ligne \"Simon le jeu\" et \"Meilleur: xxx\" sur la deuxi\u00e8me ligne o\u00f9 xxx repr\u00e9sente le meilleur niveau atteint par les joueurs. (Le record se r\u00e9initialise \u00e0 chaque d\u00e9marrage)</li> <li>Le jeu va commencer si on appuie sur un des deux boutons.</li> </ul>"},{"location":"exercices/ex09_enonce/#ecran-niveau","title":"\u00c9cran niveau","text":"<ul> <li>Pour chaque niveau:<ul> <li>Affiche \"Niveau x\" sur la premi\u00e8re ligne et \"M\u00e9morise\" sur la deuxi\u00e8me (x repr\u00e9sente le niveau actuel)</li> <li>Reproduit la suite sur les DEL pendant 1 secondes par \u00e9l\u00e9ment.</li> <li>Ensuite affiche \"Niveau x\" sur la premi\u00e8re ligne et \"Votre tour\" sur la deuxi\u00e8me ligne</li> <li>Il n'y a pas de limite de temps pour le joueur</li> <li>Le joueur doit reproduire la suite avec les boutons aux couleurs correspondantes</li> </ul> </li> <li>Si le joueur se trompe dans la suite<ul> <li>Affiche \"\"Niveau x\" sur la premi\u00e8re ligne et \"Erreur\" sur la deuxi\u00e8me</li> <li>Apr\u00e8s 5 secondes affiche partie termin\u00e9 sur la deuxi\u00e8me ligne</li> <li>Apr\u00e8s 5 secondes affiche l'\u00e9cran de d\u00e9marrage.</li> </ul> </li> <li>Si le joueur r\u00e9ussi<ul> <li>Affiche \"Niveau x\" sur la premi\u00e8re ligne et \"Bravo\" sur la deuxi\u00e8me</li> <li>Apr\u00e8s 5 secondes affiche un nouveau niveau</li> </ul> </li> </ul>"},{"location":"exercices/ex10_enonce/","title":"Exercice 10 - Have a Bluetooth Christmas","text":"<p>Question de se mettre dans l'ambiance des f\u00eates, nous allons faire jouer une chanson de No\u00ebl depuis un cellulaire sur notre ESP32. En r\u00e9sum\u00e9 nous allons transformer le ESP32 en enceinte Bluetooth.</p> <p>Cet exercice est inpir\u00e9 de l'exercice 29.1 du tutoriel de Freenove sur la programmation du ESP32 en C.</p> <ul> <li> Cr\u00e9ez le montage suivant</li> </ul> <p></p> <p>L'image n'est pas tr\u00e8s claire. Utilisez un module PCM5102A qui permet d'amplifier le son. Sur le module connecter les broches suivantes : </p> <ul> <li>BCK -&gt; GPIO 26</li> <li>DIN -&gt; GPIO 22</li> <li>LCK -&gt; GPIO 25</li> <li>VCC -&gt; 5V</li> <li>GND -&gt; Mise \u00e0 la terre</li> <li>L+ -&gt; Fil noir du speaker</li> <li>L- -&gt; Fil rouge du speaker </li> </ul> <p></p> <p></p> <p></p> <p>Copiez le code suivant dans un nouveau croquis en ajustant les broches GPIO au besoin.</p> script.js<pre><code>/**********************************************************************\n  Filename    : Bluetooth Music By PCM5102\n  Description : Use ESP32 to play the audio received via Bluetooth.\n                Use your phone's Bluetooth connection to ESP32, \n                then open the music APP and play the music, \n                and you'll hear ESP32 play the phone's music\n  Auther      : www.freenove.com\n  Modification: 2021/12/02\n**********************************************************************/\n#include \"BluetoothSerial.h\"\n#include \"driver/i2s.h\"\n#include \"nvs.h\"\n#include \"nvs_flash.h\"\n\n#include \"esp_bt.h\"\n#include \"bt_app_core.h\"\n#include \"bt_app_av.h\"\n#include \"esp_bt_main.h\"\n#include \"esp_bt_device.h\"\n#include \"esp_gap_bt_api.h\"\n#include \"esp_a2dp_api.h\"\n#include \"esp_avrc_api.h\"\n\n#define CONFIG_I2S_LRCK_PIN 25\n#define CONFIG_I2S_BCK_PIN  26\n#define CONFIG_I2S_DATA_PIN 22\nBluetoothSerial SerialBT;\n\nvoid setup() {\n  Serial.begin(9600);\n  SerialBT.begin(\"ESP32\");\n  Serial.println(\"Init seccess!\");\n\n  esp_err_t err = nvs_flash_init();\n  if (err == ESP_ERR_NVS_NO_FREE_PAGES || err == ESP_ERR_NVS_NEW_VERSION_FOUND) {\n    ESP_ERROR_CHECK(nvs_flash_erase());\n    err = nvs_flash_init();\n  }\n\n  i2s_config_t i2s_config;\n  i2s_config.mode = (i2s_mode_t)(I2S_MODE_MASTER | I2S_MODE_TX);\n\n  i2s_config.bits_per_sample = I2S_BITS_PER_SAMPLE_32BIT;\n  i2s_config.sample_rate = 44100;\n  i2s_config.channel_format = I2S_CHANNEL_FMT_RIGHT_LEFT;\n  i2s_config.communication_format = I2S_COMM_FORMAT_STAND_MSB;\n  i2s_config.intr_alloc_flags = 0;\n  i2s_config.dma_buf_count = 6;\n  i2s_config.dma_buf_len = 60;\n  i2s_config.tx_desc_auto_clear = true;\n  i2s_driver_install(I2S_NUM_0, &amp;i2s_config, 0, NULL);\n\n  i2s_pin_config_t pin_config;\n  pin_config.bck_io_num = CONFIG_I2S_BCK_PIN;\n  pin_config.ws_io_num = CONFIG_I2S_LRCK_PIN;\n  pin_config.data_out_num = CONFIG_I2S_DATA_PIN;\n  pin_config.data_in_num = -1;\n  i2s_set_pin(I2S_NUM_0, &amp;pin_config);\n\n  bt_app_task_start_up();\n\n /* initialize A2DP sink */\n  esp_a2d_register_callback(&amp;bt_app_a2d_cb);\n  esp_a2d_sink_register_data_callback(bt_app_a2d_data_cb);\n  esp_a2d_sink_init();\n  /* initialize AVRCP controller */\n  esp_avrc_ct_init();\n  esp_avrc_ct_register_callback(bt_app_rc_ct_cb);\n  /* set discoverable and connectable mode, wait to be connected */\n  esp_bt_gap_set_scan_mode(ESP_BT_CONNECTABLE, ESP_BT_GENERAL_DISCOVERABLE);\n  Serial.println(\"ok\");\n}\n\nvoid loop(){\n  ;  \n}\n</code></pre> <p>Enregistrez le programme et dans le m\u00eame r\u00e9pertoire que le fichier ino copiez les fichiers inclus dans ce fichier compress\u00e9 : ex10_lib.zip</p> <p>Finalement une petite modification dans l'interface de Arduino IDE : </p> <p></p> <p>Ajustez les valeurs suivante : </p> <ul> <li>Flash Frequency: \"80Mhz\"</li> <li>Flash Mode: \"DOUT\"</li> <li>Partition Scheme: \"Huge APP (3MB No OTA/1MD SPIFFS)\"</li> </ul> <p>Maintenant on teste le tout, t\u00e9l\u00e9versez le croquis sur le ESP32, ensuite connectez-vous en Bluetooth avec votre cellulaire. (Vous devrez peut-\u00eatre refaire un \"pairage\" si vous aviez fait les exercices des notes de cours sur le Bluetooth).</p> <p>Essayez maintenant de faire jouer une chanson de No\u00ebl sur votre cellulaire, le son sera diffus\u00e9 par le speaker de votre montage. Vous pouvez aussi brancher des \u00e9couteurs ou des haut-parleurs externe au module PCM5102A</p> <p>Danger</p> <ul> <li>Il est strictement defendu de faire jouer All I Want For Christmas Is You de Mariah Carer sous peine de lourdes cons\u00e9quences</li> </ul>"},{"location":"exercices/ex10_enonce/#mediagraphie","title":"Mediagraphie","text":"<p>Les exercices sont extrait et inspir\u00e9 du tutoriel pour ESP32 en langage C de Freenove :</p> <ul> <li>www.freenove.com. (n.d.). C_Tutorial.pdf Page 316-322</li> </ul>"},{"location":"exercices/formatif_formel/","title":"Formatif formel","text":"<p>L'objectif de ce formatif est d'installer et de configurer un serveur de musique sur votre Pi et de me permettre de contr\u00f4ler le serveur depuis un navigateur sur mon portable. Le serveur que nous allons installer se nomme Mopidy.</p>"},{"location":"exercices/formatif_formel/#installation-et-configuration-du-systeme-dexploitation","title":"Installation et configuration du syst\u00e8me d'exploitation","text":"<ul> <li>Installez Raspberry Pi OS Lite (32-bit) \u00e0 l'aide de Raspberry Pi Imager sans faire aucune configuration.</li> <li>Configurez depuis le terminal du pi: <ul> <li>L'usager et le mot de passe.</li> <li>La langue du clavier.</li> <li>Le timezone : <code>Montreal</code>.</li> <li>Activez le SSH.</li> <li>Modifier la sortie audio pour la prise 3.5mm</li> </ul> </li> </ul>"},{"location":"exercices/formatif_formel/#configuration-du-wifi-et-adresse-ip-fixe","title":"Configuration du wifi et adresse ip fixe","text":"<ul> <li>Configurez le wifi (raspi-config) pour le r\u00e9seau <code>Domotique-Pedago</code>. <ul> <li>Trouvez la ou les adresses des serveurs DNS (Domain server)</li> <li>Trouvez l'adresse de gateway</li> <li>Configurez une adresse ip fixe. Utilisez le num\u00e9ro de votre pi comme dernier octet de l'adresse ip.</li> </ul> </li> </ul>"},{"location":"exercices/formatif_formel/#installation-de-mopidy","title":"Installation de Mopidy","text":"<p>Installez Mopidy sur votre Pi, vous pouvez trouver les instructions d'installation ici: Installation Mopidy</p>"},{"location":"exercices/formatif_formel/#lancement-de-modipy","title":"Lancement de Modipy","text":"<p>Configurez Modipy pour qu'il soit lanc\u00e9 comme un service. Documentation</p>"},{"location":"exercices/formatif_formel/#configuration-de-mopidy-http","title":"Configuration de Mopidy-HTTP","text":"<p>Configurez l'extension pour qu'on puisse acc\u00e9der \u00e0 Modipy depuis le protocole HTTP. Dans le fichier de configuration le <code>hostname</code> sera votre adresse ip fixe. Documentation</p>"},{"location":"exercices/formatif_formel/#configuration-de-mopidy-local","title":"Configuration de Mopidy-Local","text":"<ul> <li>Cr\u00e9ez un r\u00e9pertoire <code>musik</code> dans votre <code>/home/[user]</code></li> <li>Configurez Mopidy-File pour que ce r\u00e9pertoire soit list\u00e9 : Documentation</li> </ul>"},{"location":"exercices/formatif_formel/#recuperation-dun-fichier-audio","title":"R\u00e9cup\u00e9ration d'un fichier audio","text":"<p>Connectez-vous sur mon pi pour r\u00e9cup\u00e9rer le fichier <code>the_mexican_hat_dance.mp3</code> et copiez ensuite ce fichier dans votre r\u00e9pertoire <code>musik</code></p> <ul> <li>Adresse ip : 172.19.240.99</li> <li>User : invite</li> <li>Password : formatif</li> </ul>"},{"location":"exercices/formatif_formel/#installation-du-client-iris","title":"Installation du client Iris","text":"<ul> <li>Installez le client Iris pour que je puisse contr\u00f4ler Modipy depuis mon portable.</li> <li>Documentation</li> </ul>"},{"location":"exercices/formatif_formel/#correction","title":"Correction","text":"<p>Lorsque vous \u00eates pr\u00eat, je dois pouvoir faire jouer le fichier mp3 depuis un navigateur sur mon portable. Ensuite dans un r\u00e9pertoire compress\u00e9 portant le nom nom_prenom_ff, je veux avoir les fichiers suivants : </p> <ul> <li>Votre fichier <code>dhcpcd.conf</code></li> <li>Votre fichier de configuration <code>mopidy.conf</code></li> </ul> <p>Remettez-moi le fichier dans le devoir sur Teams</p>"},{"location":"exercices/formatif_formel/#grille-de-correction","title":"Grille de correction","text":"Crit\u00e8res Points Installation et configuration du syst\u00e8me d'exploitation 5 Configuration du wifi et adresse ip fixe 5 Installation de Mopidy en service 5 Configuration de Mopidy-HTTP 5 Configuration de Mopidy-Local 5 R\u00e9cup\u00e9ration d'un fichier audio 5 Installation du client Iris 5 Remise des fichiers dans un format compress\u00e9 5 On peut faire jouer une chanson depuis un autre portable 10 /50"},{"location":"notes_de_cours/_todo/","title":"Todo","text":""},{"location":"notes_de_cours/_todo/#html","title":"HTML","text":"<ul> <li>Approfondir les composants d'une balise html, surtout les attributs</li> </ul>"},{"location":"notes_de_cours/_todo/#css","title":"CSS","text":"<ul> <li>Les unit\u00e9s de mesures : https://developer.mozilla.org/en-US/docs/Learn/CSS/Building_blocks/Values_and_units</li> <li>Comment centrer verticalement</li> <li>Comment cr\u00e9er un effet parralax</li> <li>Comment cr\u00e9er un effet de verre givr\u00e9</li> <li></li> </ul>"},{"location":"notes_de_cours/esp32/bluetooth/","title":"Connexion Bluetooth","text":"<p>Le ESP32 poss\u00e8de une interface Bluetooth qu'on peut utiliser pour connecter un appareil. Dans une connexion Bluetooth il y a un appareil en mode Master qui va peut se connecter \u00e0 d'autres appareils en mode slave. Habituellement le ESP32 sera en mode slave.</p> <p>Pour g\u00e9rer la connexion nous allons utiliser la librairie <code>BluetoothSerial.h</code> qui est d\u00e9j\u00e0 install\u00e9 avec Arduino IDE. L'appareil Master sera soit:</p> <ul> <li>Votre t\u00e9l\u00e9phone portable Android qui utilisera l'application Serial Bluetooth Terminal. </li> <li>Votre ordinateur Windows avec l'application Bluetooth Serial Tool</li> </ul> <p>La librairie BluetoothSerial utilise le profil SPP, qui n'est pas support\u00e9 par iOS, donc ne peut communiquer avec les iPhones.  L'utilisation de BLE pourrait le permettre. d\u00e9tails</p>"},{"location":"notes_de_cours/esp32/bluetooth/#premier-test-de-connexion","title":"Premier test de connexion","text":"<ul> <li> Installez Serial Bluetooth Terminal sur votre t\u00e9l\u00e9phone portable.</li> <li> Branchez votre ESP32 \u00e0 votre ordinateur et t\u00e9l\u00e9vers\u00e9 le code suivant</li> </ul> testBluetooth.ino<pre><code>#include \"BluetoothSerial.h\"\n\nBluetoothSerial SerialBT;\n// String buffer;\n\nvoid setup() {\n  Serial.begin(9600); // Initialise le port s\u00e9rie du ESP32\n  SerialBT.begin(\"ESP32Test\"); //Initialise le Bluetooth, le nom donn\u00e9 sera celui de l'appareil\n  Serial.println(\"L'appareil est d\u00e9marr\u00e9, vous pouvez maintenant le jumel\u00e9 par Bluetooth!\");\n}\n\nvoid loop() {\n  // \u00c9coute s'il y a des donn\u00e9es dans le port s\u00e9rie du ESP32\n  if(Serial.available()) {\n    // Les envoies par Bluetooth\n    SerialBT.write(Serial.read());\n  }\n  // \u00c9coute s'il y a des donn\u00e9es re\u00e7u par Bluetooth\n  if(SerialBT.available()) {\n    // Les \u00e9crits dans la console s\u00e9rie du ESP32\n    Serial.write(SerialBT.read());\n  }\n  delay(20);\n}\n</code></pre> <ul> <li> Maintenant lanc\u00e9 l'application Serial Bluetooth Terminal sur votre cellulaire et dans les configurations \u00e0 l'option devices choisissez votre esp32.</li> <li> Testez ensuite la connexion en envoyant au esp32 un message depuis le cellulaire et vice versa</li> </ul>"},{"location":"notes_de_cours/esp32/bluetooth/#controler-une-del","title":"Controler une DEL","text":"<p>Continuons notre exploration des possibilit\u00e9s que nous offre le Bluetooth en contr\u00f4lant une DEL depuis notre cellulaire.</p> <ul> <li> Faites le montage suivant :</li> </ul> <p></p> <p>Fonctionnement</p> <p>Notre programme va permettre d'allumer la DEL en envoyant le texte <code>del_on</code> par le port s\u00e9rie et de l'\u00e9teindre avec <code>del_off</code>.</p> <ul> <li> Copiez le code suivant dans un nouveau fichier</li> </ul> bluetoothDel.ino<pre><code>#include \"BluetoothSerial.h\"\n#include \"string.h\"\n#define PIN_DEL 2\n\nBluetoothSerial SerialBT;\nchar buffer[20];\nstatic int position = 0;\n\nvoid setup() {\n  Serial.begin(9600); // Initialise le port s\u00e9rie du ESP32\n  SerialBT.begin(\"ESP32Test\"); //Initialise le Bluetooth, le nom donn\u00e9 sera celui de l'appareil\n  Serial.println(\"L'appareil est d\u00e9marr\u00e9, vous pouvez maintenant le jumel\u00e9 par Bluetooth!\");\n  pinMode(PIN_DEL, OUTPUT);\n\n  // Faire clignoter la DEL pour indiquer que tout est pr\u00eat\n  for (int i = 0; i &lt; 3; i++) {\n    digitalWrite(PIN_DEL, HIGH);\n    delay(200);\n    digitalWrite(PIN_DEL, LOW);\n    delay(200);\n  }\n\n}\n\nvoid loop() {\n  // Rempli le tableau buffer avec les donn\u00e9es re\u00e7ues\n  // Chaque caract\u00e8re remplira une case du tableau\n  while(SerialBT.available()){\n    buffer[position] = SerialBT.read();\n    position++;\n  }\n\n  // Si on a du contenu dans le tableau\n  if(position&gt;0){\n    Serial.print(buffer); // Imprime le tableau pour v\u00e9rification\n\n    // Regarde dans le tableau si les 6 premiers caract\u00e8res correspondent \u00e0 \"del_on\"\n    if(strncmp(buffer, \"del_on\", 6)==0){\n      // Allume la DEL\n      digitalWrite(PIN_DEL, HIGH);\n    }\n    // Regarde dans le tableau si les 7 premiers caract\u00e8res correspondent \u00e0 \"del_off\"\n    if(strncmp(buffer, \"del_off\", 7)==0){\n      // \u00c9teint la DEL\n      digitalWrite(PIN_DEL, LOW);\n    }\n\n    position=0;\n    memset(buffer, 0, 20);  \n  }\n}\n</code></pre> <p>On donne \u00e0 la fonction strncmp notre tableau de charact\u00e8res re\u00e7u comme premier param\u00e8tre, le texte qu'on veut valider en deuxi\u00e8me et le nombre de caract\u00e8re du tableau \u00e0 utiliser. Pour plus d'informations sur la fonction strncmp : https://www.tutorialspoint.com/c_standard_library/c_function_strncmp.htm</p> <ul> <li> Maintenant tester votre programme en envoyant les commandes \"del_on\" et \"del_off\" au ESP32 depuis votre cellulaire.</li> </ul>"},{"location":"notes_de_cours/esp32/bluetooth/#mediagraphie","title":"Mediagraphie","text":"<p>Les exercices sont extrait et inspir\u00e9 du tutoriel pour ESP32 en langage C de Freenove :</p> <ul> <li>www.freenove.com. (n.d.). C_Tutorial.pdf Page 285-322</li> </ul>"},{"location":"notes_de_cours/esp32/bouton/","title":"Boutons","text":"<p>Le bouton est un petit dispositif physique qui va permettre au courant de passer ou non. Quand le bouton est appuy\u00e9, le circuit interne est ferm\u00e9 et le courant passe. Il nous est possible de \"lire\" par une broche si le courant passe ou non et d'ex\u00e9cuter du code en cons\u00e9quence.</p> <p>Les boutons avec lesquels nous allons travailler sont compos\u00e9s de 4 broches dispos\u00e9es par deux sur deux c\u00f4t\u00e9s oppos\u00e9s. Les broches du boutons sont reli\u00e9es entre elles de la fa\u00e7on suivante: en pla\u00e7ant le bouton face contre nous, un des c\u00f4t\u00e9 avec des broches vers le haut, les broches de gauche sont reli\u00e9es entre elle et celles de droite aussi.</p> <p></p>"},{"location":"notes_de_cours/esp32/bouton/#branchement-du-bouton","title":"Branchement du bouton","text":"<p>Quand le bouton est rel\u00e2ch\u00e9, il est dans un \u00e9tat ind\u00e9termin\u00e9 qui ne correspond pas n\u00e9cessairement \u00e0 l'\u00e9tat r\u00e9el du bouton. Pour palier \u00e0 ce probl\u00e8me on va utiliser une r\u00e9sistance qui forcera l'\u00e9tat du bouton. On peut utiliser une r\u00e9sistance interne du ESP32 ou bien utiliser une r\u00e9sistance physique comme on l'a fait avec les DELs.</p>"},{"location":"notes_de_cours/esp32/bouton/#resistance-interne","title":"R\u00e9sistance interne","text":"<p>Pour relier un bouton en utilisant la r\u00e9sistance interne on va brancher une broche du haut a un port GPIO et une broche du bas en diagonal \u00e0 la mise \u00e0 la terre.</p> <p></p> <p>Ensuite dans le code on va encore s'initialiser une constante avec le num\u00e9ro du GPIO o\u00f9 le bouton est branch\u00e9. </p> <p><code>#define PIN_BUTTON 8;</code></p> <p>Dans la fonction setup() on va initialiser la broche avec pinMode et INPUT_PULLUP pour indiquer qu'on utilise la r\u00e9sistance interne.</p> <p><code>pinMode(PIN_BUTTON, INPUT_PULLUP);</code></p> <p>La fonction digitalRead() va nous retourner un byte : 0 (LOW) ou 1 (HIGH).</p> <pre><code>byte etatBouton = digitalRead(PIN_BUTTON);\nif (etatBouton == LOW) {\n    // ...\n}\n</code></pre>"},{"location":"notes_de_cours/esp32/bouton/#a-vous-de-jouer","title":"\u00c0 vous de jouer","text":"<ul> <li> Cr\u00e9ez le montage affich\u00e9 plus haut et \u00e9crivez un sketch qui va \u00e9crire \u00e0 la console en continu si le bouton est press\u00e9 ou non.</li> <li> Est-ce que vous remarquez quelque chose de particulier? Est-ce que le texte affich\u00e9 est toujours correct.</li> <li> Faites une petite recherche sur le ph\u00e9nom\u00e8ne de \"Debounce\" et ajustez votre code pour pallier \u00e0 ce probl\u00e8me.</li> </ul>"},{"location":"notes_de_cours/esp32/del/","title":"DEL","text":"<p>Une diode \u00e9lectroluminescente (DEL) est un petit dispositif qui peut \u00e9mettre de la lumi\u00e8re quand on lui applique un courant \u00e9lectrique. La DEL comporte deux branches, l'une plus longue que l'autre, et le sens de branchement est important. La plus longue branche correspond au positif (+) et doit \u00eatre branch\u00e9 sur la sortie positive de l'alimentation. \u00c0 l'inverse la branche courte est le n\u00e9gatif (-) et doit \u00eatre reli\u00e9e \u00e0 la mise \u00e0 la terre (ground).</p> <p></p>"},{"location":"notes_de_cours/esp32/del/#petit-calcul-et-resistance","title":"Petit calcul et r\u00e9sistance","text":"<p>La DEL doit \u00eatre traverser par le bon voltage de courant qui se situe g\u00e9n\u00e9ralement entre 1.9 et 3.4 volts selon le mod\u00e8le. On doit aussi ajouter une r\u00e9sistance \u00e0 la DEL pour la prot\u00e9ger d'une trop grande consomation de courant. La DEL \u00e0 donc une intensit\u00e9 de courant maximale \u00e0 ne pas d\u00e9passer.</p> <p>Danger</p> <p>Ne brancher jamais une DEL directement \u00e0 la source de courant, vous allez la br\u00fbler.</p> <p>Dans notre kit ESP32 nous avons 4 couleurs de DEL diff\u00e9rentes. Prenez notes que le voltage et l'intensit\u00e9 de courant varient selon la couleur de la DEL </p> Couleur Voltage Courant maximal Rouge 2V 20mA Jaune 2.1V 20mA Verte 2.2V 10mA Bleu 3.3V 10mA <p></p> <p>La r\u00e9sistance \u00e0 appliquer, exprimer en Ohm (\u03a9), va donc varier selon la couleur de la DEL et de la source de courant qu'on va utiliser. On peut utiliser la loi de Ohm pour calculer la r\u00e9sistance qu'on peut r\u00e9sumer par le calcul suivant : </p> <p><code>(Voltage de ma source de courant - voltage maximal de ma DEL) / Courant maximal en amp\u00e8re</code></p> <p>N'oubliez pas que les valeurs du tableau sont en mA et qu'il faut les diviser par 1000 pour les ramener en amp\u00e8res. Vous \u00eates maintenant capable de mesurer la r\u00e9sistance requise pour une DEL, je vous donne le droit d'utiliser un calculateur en ligne : https://www.circuitbread.com/toolbox/led-resistor-calculator</p>"},{"location":"notes_de_cours/esp32/del/#la-resistance","title":"La r\u00e9sistance","text":"<p>Une r\u00e9sistance est un \u00e9quipement \u00e9lectronique passif qui limite et r\u00e9gularise le d\u00e9bit du courant dans un circuit \u00e9lectronique. Il n'y a pas de borne positive ou n\u00e9gative sur une r\u00e9sistance, on peut la brancher dans un sens ou dans l'autre. Par contre il y a une s\u00e9rie de ligne de couleur qui nous indique la valeur de la r\u00e9sistance. Pour apprendre \u00e0 d\u00e9chiffrer ce code de couleur, je vous invite \u00e0 consulter l'article suivant : https://www.positron-libre.com/cours/electronique/resistances/code-couleurs-resistances.php.</p> <p></p>"},{"location":"notes_de_cours/esp32/del/#branchement-sur-la-planche-de-maquettage","title":"Branchement sur la planche de maquettage","text":"<p>La planche de maquettage (Breadboard) est lit\u00e9ralement une petite planche muni de trou dans lesquelles ont peut brancher nos composants sans n\u00e9cessiter de soudure, pratique pour l'exp\u00e9rimentation. Les trous sont reli\u00e9 entre eux et forme de petits circuits de la fa\u00e7on suivante : </p> <p></p> <p>De chaque c\u00f4t\u00e9 vous avez aussi une ligne rouge et bleu qui correspont \u00e0 un circuit d'alimentation positive (rouge) et n\u00e9gative (bleu).</p> <p>Important</p> <p>D\u00e9brancher toujours l'alimentation de votre ESP32 pendant que vous faites votre montage</p> <p>On va maintenant faire un branchement simple d'une DEL rouge \u00e0 notre ESP32. Le sch\u00e9ma est pour le mod\u00e8le avec la carte d'extension. Vous pouvez tr\u00e8s bien l'adapter pour le brancher directement au ESP32. Pour ce montage vous avez besoin de : </p> <ul> <li>Un DEL rouge</li> <li>Une r\u00e9sistance de 220 ohms</li> <li>Deux cables de racordement</li> </ul> <p> </p> Promis les prochains montage je fais des sch\u00e9mas plus jolie"},{"location":"notes_de_cours/esp32/del/#faisons-clignoter-la-del","title":"Faisons clignoter la DEL","text":"<p>On va reprendre le premier sketch qu'on avait fait pour faire clignoter la DEL incluse sur le ESP32. Vous l'avez devin\u00e9 on va faire clignoter notre belle DEL rouge. Comme on peut voir sur le sch\u00e9ma j'ai branch\u00e9 le circuit qui alimente la DEL sur le GPIO2.</p> <pre><code>// On stocke dans une constante le num\u00e9ro du GPIO utilis\u00e9\n#define PIN_DEL 2\n\nvoid setup() {\n  // On initialize la pin en sortie\n  pinMode(PIN_DEL, OUTPUT);\n}\n\nvoid loop() {\n  // Allume la DEL\n  digitalWrite(PIN_DEL, HIGH);\n  delay(1000);\n  // \u00c9teins la DEL\n  digitalWrite(PIN_DEL, LOW);\n  delay(1000);\n}\n</code></pre> <ul> <li> Testez votre branchement avec cet extrait de code, votre DEL devrait allumer. Vous avez surement remarqu\u00e9 que la DEL du ESP32 s'est mise \u00e0 clignoter elle aussi. C'est parce qu'elle est \u00e9galement branch\u00e9 au GPIO2.</li> <li> Changez votre branchement pour utiliser un autre port GPIO. Vous pouvez vous r\u00e9f\u00e9rer au sch\u00e9ma de la page sur les broches du ESP32. Vous pouvez utiliser n'importe quel broche GPIO Entr\u00e9e et sortie (Input and Output). Ajuster votre code selon votre nouveau branchement.</li> </ul>"},{"location":"notes_de_cours/esp32/esp32/","title":"ESP32","text":"<p>Freenove kit doc:  https://freenove.com/tutorial</p> <p>Port USB-C -&gt; bien entrer le connecteur, courant peut \u00eatre connect\u00e9 sans que les donne\u00e9s soient fonctionnelles</p> <p>Boutons sur le kit Freenove:</p> <ul> <li>Reset -&gt; relance le programme</li> <li>Boot -&gt; bootstrap mode: laisser Boot appuy\u00e9, appuyer sur Reset, relacher Boot</li> </ul> <p></p>"},{"location":"notes_de_cours/esp32/esp32_pin/","title":"Les broches du ESP32","text":"<p>Les broches du ESP32</p> <p></p> <p>Image taille r\u00e9elle</p>"},{"location":"notes_de_cours/esp32/joystick/","title":"Le joystick","text":"<p>Il peut recevoir des donn\u00e9es analogiques selon deux axes (X et Y) en m\u00eame temps. Il y a aussi un bouton sur le dessus </p>"},{"location":"notes_de_cours/esp32/lcd/","title":"\u00c9cran LCD","text":"<p>L'\u00e9cran LCD que nous allons utiliser est le I2C LCD1602. Gr\u00e2ce \u00e0 un module de communication parral\u00e8le/s\u00e9rie int\u00e9gr\u00e9 il n'y a que 4 branchements \u00e0 faire. R\u00e9f\u00e9rez-vous aux images suivantes pour les branchements : </p> <p></p> <p> Libre \u00e0 vous d'utiliser les ports GPIO que vous souhaitez</p>"},{"location":"notes_de_cours/esp32/lcd/#installation-de-la-librairie","title":"Installation de la librairie","text":"<p>Dans Arduino IDE installez la librairie <code>LiquidCrystal I2C</code>.</p> <p></p>"},{"location":"notes_de_cours/esp32/lcd/#utilisation","title":"Utilisation","text":"<p>L'extrait de code suivant est tir\u00e9 d'un tutoriel de la documentation de Freenove. Il vous montre comment afficher un texte sur l'\u00e9cran.</p> <pre><code>// Importation des librairies\n#include &lt;LiquidCrystal_I2C.h&gt;\n#include &lt;Wire.h&gt;\n\n#define SDA 13 //Broche SDA\n#define SCL 14 //Broche SCL\n\n// Instanciation de l'\u00e9cran\nLiquidCrystal_I2C lcd(0x3F, 16, 2);\n// Si l'\u00e9cran ne peut afficher le texte changer la ligne pour \n// LiquidCrystal_I2C lcd(0x27, 16, 2);\n\nvoid setup() {\n  Wire.begin(SDA, SCL); // branchement des broches IIC\n  lcd.init(); // Initialisation de l'\u00e9cran\n  lcd.backlight(); // Allume la lumi\u00e8re de fond\n  lcd.setCursor(0,0); // Positionne le curseur \u00e0 la colonne 0, ligne 0\n  lcd.print(\"hello, world! \");\n}\n\nvoid loop() {\n  lcd.setCursor(0,1); // Positionne le curseur \u00e0 la colonne 0, ligne 1\n  lcd.print(\"Counter:\");\n  lcd.print(millis() / 1000);\n  delay(1000);\n}\n</code></pre> <p>Pour \u00e9crire dans l'\u00e9cran, on va positionner le curseur \u00e0 l'endroit d\u00e9sir\u00e9 avec la commmande <code>setCursor(Colonne, Ligne)</code> et ensuite \u00e9crire le texte d\u00e9sir\u00e9 avec <code>print(\"mon texte\")</code>.</p> <ul> <li><code>setCursor(Colonne, Ligne)</code> : Positionne le curseur \u00e0 la colonne et la ligne sp\u00e9cifi\u00e9es</li> <li><code>print(\"texte\")</code> : Affiche le texte \u00e0 partir de la position du curseur</li> <li><code>clear()</code> : Efface tout l'\u00e9cran</li> </ul>"},{"location":"notes_de_cours/esp32/lcd/#sources","title":"Sources","text":"<ul> <li>Freenove. (n.d.). Freenove/freenove_ultimate_starter_kit_for_esp32: Apply to FNK0047. https://github.com/Freenove/Freenove_Ultimate_Starter_Kit_for_ESP32 </li> <li>ESP32 - LCD. ESP32 Tutorial. (n.d.). https://esp32io.com/tutorials/esp32-lcd </li> </ul>"},{"location":"notes_de_cours/esp32/millis/","title":"Faire une pause dans le traitement","text":"<p>Parfois on veut pouvoir faire une pause dans le traitement de notre sketch. Le code \u00e9tant plac\u00e9 dans une boucle infini qui tourne rapidement, est-ce que nous avons vraiment besoin de prendre une mesure de la temp\u00e9rature \u00e0 toute les x millisecondes? Bien sur que non, et il y a des fa\u00e7on de ralentir le traitement.</p>"},{"location":"notes_de_cours/esp32/millis/#la-methode-avec-delais","title":"La m\u00e9thode avec d\u00e9lais","text":"<p>Comme nous l'avons d\u00e9j\u00e0 vu, on peut utiliser la fonction <code>delay()</code> qui prend en param\u00e8tre un nombre de secondes qui peuvent \u00eatre d\u00e9cimales.</p> <pre><code>// Marque une pause de 1 seconde\ndelay(1000)\n</code></pre> <p>Le d\u00e9savantage de cette m\u00e9thode est que tout le traitement est stopp\u00e9 durant ce d\u00e9lais.</p>"},{"location":"notes_de_cours/esp32/millis/#la-methode-plus-flexible","title":"La m\u00e9thode plus flexible","text":"<p>On ne peut pas r\u00e9cup\u00e9rer le temps actuelle depuis le ESP32 mais un peu parcontre savoir depuis combien de temps le programme actuelle tourne sur le ESP32. </p> <p>La fonction <code>millis()</code> va nous retourner se nombre en millisecondes.</p> <p>L'id\u00e9e est de d\u00e9finir une variable initialis\u00e9e \u00e0 0 et qui va contenir le moment o\u00f9 la derni\u00e8re ex\u00e9cution du traitement qu'on veut retarder. On va aussi se d\u00e9finir une intervalle en millisecondes qui va repr\u00e9senter notre temps d'attente. </p> <p>Maintenant \u00e0 chaque it\u00e9ration de la boucle de traitement, on va r\u00e9cup\u00e9rer le temps avec <code>millis()</code>. Ensuite si le temps r\u00e9cup\u00e9r\u00e9 - le moment de la derni\u00e8re ex\u00e9cution est s\u00e9p\u00e9rieur ou \u00e9gale \u00e0 notre intervalle pr\u00e9d\u00e9finie et va lancer le traitement. On va aussi attribuer \u00e0 notre variable qui contenait le moment de la derni\u00e8re ex\u00e9cution la valeur du temps actuelle.</p> <p>Voici un petit exemple tir\u00e9 de la documentation d'Arduino. </p> <pre><code>/*\n  Blink without Delay\n\n  Turns on and off a light emitting diode (LED) connected to a digital pin,\n  without using the delay() function. This means that other code can run at the\n  same time without being interrupted by the LED code.\n\n  The circuit:\n  - Use the onboard LED.\n  - Note: Most Arduinos have an on-board LED you can control. On the UNO, MEGA\n    and ZERO it is attached to digital pin 13, on MKR1000 on pin 6. LED_BUILTIN\n    is set to the correct LED pin independent of which board is used.\n    If you want to know what pin the on-board LED is connected to on your\n    Arduino model, check the Technical Specs of your board at:\n    https://www.arduino.cc/en/Main/Products\n\n  created 2005\n  by David A. Mellis\n  modified 8 Feb 2010\n  by Paul Stoffregen\n  modified 11 Nov 2013\n  by Scott Fitzgerald\n  modified 9 Jan 2017\n  by Arturo Guadalupi\n\n  This example code is in the public domain.\n\n  https://www.arduino.cc/en/Tutorial/BuiltInExamples/BlinkWithoutDelay\n*/\n\n// constants won't change. Used here to set a pin number:\nconst int ledPin = LED_BUILTIN;  // the number of the LED pin\n\n// Variables will change:\nint ledState = LOW;  // ledState used to set the LED\n\n// Generally, you should use \"unsigned long\" for variables that hold time\n// The value will quickly become too large for an int to store\nunsigned long previousMillis = 0;  // will store last time LED was updated\n\n// constants won't change:\nconst long interval = 1000;  // interval at which to blink (milliseconds)\n\nvoid setup() {\n  // set the digital pin as output:\n  pinMode(ledPin, OUTPUT);\n}\n\nvoid loop() {\n  // here is where you'd put code that needs to be running all the time.\n\n  // check to see if it's time to blink the LED; that is, if the difference\n  // between the current time and last time you blinked the LED is bigger than\n  // the interval at which you want to blink the LED.\n  unsigned long currentMillis = millis();\n\n  if (currentMillis - previousMillis &gt;= interval) {\n    // save the last time you blinked the LED\n    previousMillis = currentMillis;\n\n    // if the LED is off turn it on and vice-versa:\n    if (ledState == LOW) {\n      ledState = HIGH;\n    } else {\n      ledState = LOW;\n    }\n\n    // set the LED with the ledState of the variable:\n    digitalWrite(ledPin, ledState);\n  }\n}\n</code></pre> <p>Source : https://docs.arduino.cc/built-in-examples/digital/BlinkWithoutDelay</p> <p>Cette technique \u00e0 l'avantage de ne pas retarder les autres traitements et on pourrait m\u00eame s'en servir pour lancer des plusieurs traitements \u00e0 des intervalles diff\u00e9rents. </p>"},{"location":"notes_de_cours/esp32/potentiometre/","title":"Le potentiom\u00eatre","text":"<p>Le potentiom\u00eatre est un capteur qui permet d'ajuster l'intensit\u00e9 du cournant qui le traverse. La valeur sera d\u00e9termin\u00e9e par selon un angle compris entre 0 (du c\u00f4t\u00e9 du ground) et 275 degr\u00e9es.</p>"},{"location":"notes_de_cours/esp32/potentiometre/#branchement","title":"Branchement","text":"<p>Le capteur comprends trois broches. Si on met le potientom\u00eatre \u00e0 plat, avec le \"bras\" orient\u00e9 vers le haut et les broches tourn\u00e9es vers nous, les branchements sont les suivants : </p> <ul> <li>\u00c0 gauche : La mise \u00e0 la terre</li> <li>Au milieu : La sortie qu'on connecte \u00e0 un GPIO du ESP32</li> <li>\u00c0 droite : L'alimentation 3.3V ou 5V</li> </ul> <p></p>"},{"location":"notes_de_cours/esp32/potentiometre/#comment-lire-sa-valeur","title":"Comment lire sa valeur","text":"<p>On doit faire une lecture analogue de la broche GPIO sur laquelle on a connect\u00e9 le potentiom\u00eatre. </p> <pre><code>// La broche 4 aurait \u00e9t\u00e9 utilis\u00e9e\nint valeur = analogRead(4);\n</code></pre> <p>La valeur lue sera calcul\u00e9e par le esp32 selon l'angle du potentiom\u00eatre et le voltage. Elle sera situ\u00e9 entre 0 et 4095. On peut facilement convertir la valeur selon un autre \u00e9chelle avec la foncion <code>map()</code>. </p> <pre><code>map(valeur, minOrigine, maxOrigine, minDest, maxDest);\n</code></pre> <ul> <li>valeur : La valeur \u00e0 convertir</li> <li>minOrigine : La valeur minimum de l'\u00e9chelle d'origine</li> <li>maxOrigine : La valeur maximum de l'\u00e9chelle d'origine</li> <li>minDest : La valeur minimum de l'\u00e9chelle de destination</li> <li>maxDest : La valeur maximum de l'\u00e9chelle de destination</li> </ul> <p>Dans l'exemple suivant la valeur passera d'une valeur entre 0 et 4095 \u00e0 une valeur entre 0 et 100</p> Exemple map()<pre><code>int valeur = analogRead(4);\nint valeurMap = map(valeur, 0, 4095, 0, 100);\n</code></pre>"},{"location":"notes_de_cours/esp32/potentiometre/#a-vous-de-jouer","title":"\u00c0 vous de jouer","text":"<ul> <li> Cr\u00e9ez le montage affich\u00e9 plus haut et \u00e9crivez un sketch qui va \u00e9crire \u00e0 la console avec un intervalle de 500ms la valeur du potentiom\u00eatre.</li> <li> Ajoutez une DEL \u00e0 votre montage et trouvez une fa\u00e7on de faire varier son intensit\u00e9 selon la valeur du potentiom\u00eatre. </li> </ul>"},{"location":"notes_de_cours/esp32/premier_sketch/","title":"Notre premier sketch","text":""},{"location":"notes_de_cours/esp32/premier_sketch/#un-peu-de-mise-en-contexte","title":"Un peu de mise en contexte","text":"<p>Les programmes qu'ont va \u00e9crire avec Arduino IDE sont appel\u00e9es des sketches. Chaque programme va \u00eatre enregistr\u00e9 dans un fichier portant l'extension ino. </p> <p>Pour compiler un sketch et en m\u00eame temps v\u00e9rifier qu'il ne contient pas d'erreur on va utiliser le bouton crochet, le raccourci Ctrl+R ou dans le menu \"Sketch\" et ensuite \"Verify/Compile\".</p> <p>Pour envoyer un sketch sur le ESP32, cliquez sur le bouton avec la fl\u00e8che, Ctrl+U ou bien dans le menu \"Sketch\" et ensuite \"Upload\".</p> <p>Une fois le programme sur le ESP32, il va rouler en boucle tant que le ESP32 est sous tension. Pour l'instant la tension fournis par le cable USB est suffisante, mais on va voir plus tard qu'on doit parfois en fournir plus.</p>"},{"location":"notes_de_cours/esp32/premier_sketch/#structure-de-nos-programme","title":"Structure de nos programme","text":"<p>Parce que je vous aime et que je sais que vous \u00eates les meilleurs ont va programmer en C. La structure de nos programme sera sensiblement toujours la m\u00eame.</p> <ol> <li>En premier on va importer les librairies requises et d\u00e9clarer les variables et objets globaux.</li> <li>Ensuite nous avons la fonction <code>void setup()</code> qui va contenir du code d'initialisation et qui va \u00eatre ex\u00e9cut\u00e9e qu'un fois au d\u00e9marrage.</li> <li>Finalement il y a la fonction <code>void loop()</code> qui va \u00eatre notre boucle de traitement principale. Cette fonction va tourner en boucle tant que le ESP32 est sous tension.</li> <li>On peut aussi d\u00e9clarer des fonctions \u00e0 l'ext\u00e9rieur de \"setup\" et \"loop\" pour mieux structurer notre code.</li> </ol>"},{"location":"notes_de_cours/esp32/premier_sketch/#premier-petit-test","title":"Premier petit test","text":"<p>Juste un petit programme tout mignon pour s'assurer que tout fonctionne. Dans Arduino IDE on a acc\u00e8s \u00e0 un moniteur s\u00e9rie dans lequel on peut \u00e9crire du texte depuis le ESP32. C'est pratique pour d\u00e9bugger ou simplement envoyer des communications. Nous faire un sketch qui va y inscrire du texte au d\u00e9marrage.</p> <ol> <li>Cr\u00e9ez un nouveau sketch (\"File\" -&gt; \"New Sketch\" ou bien Ctrl+N)</li> <li>Inscrivez le code suivant : </li> </ol> <pre><code>void setup() {\n  // Initialise le port s\u00e9rie \u00e0 une vitesse de 9600 bauds\n  Serial.begin(9600);\n  // Affiche le texte Hello dans la console s\u00e9rie et saute une ligne\n  Serial.println(\"Hello\");\n}\n\n// La fonction loop s'ex\u00e9cute \u00e0 l'infini\nvoid loop() {\n  Serial.println(\"world!!\");\n  // Marque une pause de 1 seconde\n  delay(1000);\n}\n</code></pre>"},{"location":"notes_de_cours/esp32/premier_sketch/#enfin-le-sketch","title":"Enfin le sketch","text":"<p>Maintenant on va essayer de faire clignoter une petite DEL qui se situe sur le ESP32. </p> <p></p> <p>La DEL est associ\u00e9 au GPIO 2, il faut commencer par l'indiquer dans notre code en cr\u00e9ant une constante contenant le num\u00e9ro du GPIO. En fait cette \u00e9tape n'est pas n\u00e9cessaire mais simplifie le code quand on travail avec plusieurs \"pins\".</p> <p><code>#define PIN_DEL 2</code></p> <p>Note</p> <pre><code>GPIO (General-Purpose Input/Output) sont des connecteurs, ou \"pin\", qui nous permettent de connecter le ESP32 \u00e0 un circuit \u00e9lectrique. On peut les visualiser comme des interrupteurs qui peuvent \u00eatre basculer \"On\" et \"Off\".\n</code></pre> <p>Ensuite on va initialiser la pin dans la fonction setup() et lui indiquer qu'elle va \u00eatre en mode sortie, \"OUTPUT\".</p> <p><code>pinMode(PIN_DEL, OUTPUT);</code></p> <p>Un petit truc, ajoutez un d\u00e9lais \u00e0 la fin de l'initialisation pour \u00eatre sur que tout est charg\u00e9 avant de se lancer dans la boucle de traitement.</p> <p>Finalement pour allumer la DEL on va \"\u00e9crire\" dans la pin, on va lui envoyer un signal, HIGH pour l'allumer, LOW pour l'\u00e9teindre.</p> <ul> <li>Allume la DEL  : <code>digitalWrite(PIN_DEL, HIGH);</code></li> <li>Etteind la DEL : <code>digitalWrite(PIN_DEL, LOW);</code> </li> </ul> <p>\u00c0 vous de jouer</p> <p>Assemblez tous ces morceaux de robots et \u00e9crivez un sketch qui va faire clignoter la DEL en continue \u00e0 une intervalle de une seconde et demi. Quand la lumi\u00e8re allume inscrivez \"On\" dans le moniteur s\u00e9rie et \"Off\" quand elle s'\u00e9teint.</p> <p>\u00c7a fonctionne?</p> <p>Maintenant que vous avez une belle petite lumi\u00e8re qui clignote, modifiez votre code pour qu'apr\u00e8s 10 clignotement la DEL s'\u00e9teingne et que dans le moniteur s\u00e9rie on affiche le message \"Ok c'est bon on a compris...\". La DEL restera ensuite eteinte \u00e0 moins qu'on red\u00e9marre le ESP32.</p>"},{"location":"notes_de_cours/esp32/resistances/","title":"Les r\u00e9sistances","text":""},{"location":"notes_de_cours/esp32/serial_monitor/","title":"Le moniteur s\u00e9rie","text":"<p>On vient de voir qu'on pouvait depuis le ESP32 \u00e9crire dans le moniteur s\u00e9rie. Mais il est aussi possible d'envoyer de l'information au ESP32 depuis le moniteur s\u00e9rie.</p>"},{"location":"notes_de_cours/esp32/serial_monitor/#ecrire-du-esp32-au-pc","title":"\u00c9crire du ESP32 au pc","text":"<p>On intialise le port s\u00e9rie et on indique la vitesse de transfert avec <code>Serial.begin(112500);</code></p> <p>Ensuite pour envoyer de l'informations on peut utiliser : </p> <ul> <li><code>Serial.print()</code> : Envoie le texte en param\u00e8tre</li> <li><code>Serial.println()</code> : Envoie le texte en param\u00e8tre et saute une ligne</li> <li><code>Serial.write()</code> : Envoie l'information en binaire</li> </ul> <pre><code>void setup() {\n  Serial.begin(9600);\n  // Affiche le texte Hello dans la console s\u00e9rie et saute une ligne\n  Serial.print(\"Hello \");\n  Serial.println(\"World\");\n}\n</code></pre>"},{"location":"notes_de_cours/esp32/serial_monitor/#envoyer-de-linformation-depuis-le-pc","title":"Envoyer de l'information depuis le pc","text":"<p>Dans la section \"Serial Monitor\" de Arduino IDE il y a une section \"Message\" o\u00f9 on peut entrer notre texte.</p> <p></p> <p>Dans le sketch, on va commencer par initialiser le port s\u00e9rie. Ensuite dans la boucle de traitement on va v\u00e9rifier s'il y a de donn\u00e9es qui arrive du port s\u00e9rie avec la fonction <code>Serial.available()</code> qui retourne True s'il y en a.</p> <pre><code>if(Serial.available()) {\n  // mon code\n}\n</code></pre> <p>Il nous reste maintenant \u00e0 lire les donn\u00e9es provenant du port s\u00e9rie. Il y a plusieurs fonctions de lecture, nous allons pour l'exemple utiliser <code>Serial.readStringUntil()</code>. Cette fonction va lire et retourner les caract\u00e8res jusqu'\u00e0 ce qu'elle lise un caract\u00e8re qu'on lui donne en param\u00e8tre OU si un timeout est atteint. </p> <p>Le timeout par d\u00e9faut est 1000ms, il peut \u00eatre chang\u00e9 \u00e0 l'aide de <code>Serial.setTimout(ms)</code></p> <p>Lisons les charact\u00e8res entrant sur le port s\u00e9rie en utilisant le carat\u00e8re <code>\\n</code> (indiquant une nouvelle ligne) comme carat\u00e8re de fin.  Ce caract\u00e8re ne sera pas inclus dans la chaine retourn\u00e9e par la fonction.</p> <pre><code>String monTexte = Serial.readStringUntil('\\n');\n</code></pre> <p>Attention, on doit passer en param\u00e8tre un caract\u00e8re et non une chaine de texte, il faut utiliser l'apostrophe (') et non le guillement (\").</p> <p>S'il y a des donn\u00e9es recues sur le port s\u00e9rie avant qu'elle ne soit lues, elles sont gard\u00e9es en m\u00e9moire tampon.</p>"},{"location":"notes_de_cours/esp32/serial_monitor/#on-met-ca-en-pratique","title":"On met \u00e7a en pratique","text":"<p>Cr\u00e9er un sketch qui va nous permettre d'envoyer deux ordres au ESP32. Chaque ordre sera un mot unique de votre choix. Une des ordres sera de faire allumer la DEL et l'autre l'\u00e9teindra.</p>"},{"location":"notes_de_cours/esp32/serial_monitor/#on-complique-un-peu-les-choses","title":"On complique un peu les choses","text":"<p>Maintenant que votre sketch fonctionne, modifiez le pour utiliser d'autres fonctions de lecture du port s\u00e9rie :</p> <ol> <li>Faites une version qui va utiliser <code>Serial.read()</code></li> <li>Faites une deuxi\u00e8me version qui va utiliser <code>Serial.readBytes()</code></li> </ol> <p>Vous pouvez vous r\u00e9f\u00e9rez \u00e0 la documentation de Arduino : https://www.arduino.cc/reference/en/</p>"},{"location":"notes_de_cours/esp32/setup/","title":"Installation","text":"<p>Avant de pouvoir ex\u00e9cuter des scripts sur le ESP32 nous devons installer le pilote de p\u00e9riph\u00e9rique pour communiquer avec le ESP et le logiciel Arduino IDE</p>"},{"location":"notes_de_cours/esp32/setup/#installation-des-drivers-ch340","title":"Installation des drivers CH340","text":"<p>Pour trans\u00e9rer notre code il faut installer le driver CH340 sur notre ordinateur. </p> <p>Commencez par connecter le ESP32 \u00e0 l'ordinateur \u00e0 l'aide du cable USB.</p> <p>Ensuite t\u00e9l\u00e9chargez le driver \u00e0 cette adresse : https://www.wch-ic.com/search?q=CH340&amp;t=downloads. Le fichier \u00e0 t\u00e9l\u00e9charger pour les portables sous Windows est CH341SER.exe. Ex\u00e9cutez le fichier une fois t\u00e9l\u00e9charg\u00e9.</p> <p>Pour v\u00e9rifier que le driver est bien install\u00e9, ouvrez l'explorateur de fichier et cliquez avec le bouton de droit sur \"Ce PC\". S\u00e9lectionnez ensuite \"G\u00e9rer\" et dans le paneau de droite \"Gestionnaire de p\u00e9riph\u00e9riques\". </p> <p></p> <p>Dans la section \"Ports (COM et LPT)\" vous devriez avoir une entr\u00e9e \"USB-SERIAL CH340(COM4)\". Le num\u00e9ro du port peut changer (COM4).</p>"},{"location":"notes_de_cours/esp32/setup/#installation-de-arduino-ide","title":"Installation de Arduino IDE","text":"<p>Passons maintenant \u00e0 l'installation de notre IDE, Arduino IDE. Allez \u00e0 l'adresse suivante t\u00e9l\u00e9charger la derni\u00e8re version disponible pour votre syst\u00e8me d'exploitation : </p> <ul> <li>https://www.arduino.cc/en/software</li> </ul> <p>D\u00e9marrer l'installation une fois le programme t\u00e9l\u00e9charg\u00e9 et ensuite lancez l'application.</p> <p></p>"},{"location":"notes_de_cours/esp32/setup/#configuration-de-lenvironnement","title":"Configuration de l'environnement","text":"<p>Encore quelques petites configurations. Dans le programme Arduino IDE, cliquez sur \"Tools\", \"Board\", \"Board Manager\" et \"ESP32 by Expressif\" </p> <p></p> <p>Ensuite dans la barre en haut selectionner le drop-down Select Board and Port</p> <p></p> <p>Sp\u00e9cifiez votre Port COM (varie d'un ordinateur \u00e0 l'autre) et le mod\u00e8le de board \"ESP32 WROVER KIT\"</p> <p></p> <p>Bingo votre portable est connect\u00e9 \u00e0 votre ESP32, vous en avez la preuve ici</p> <p></p>"},{"location":"notes_de_cours/sense_hat/affichage_pixel/","title":"Afficher sur un pixel","text":"<p>La matrice de DEL pr\u00e9sente sur le Sense Hat est en fait une s\u00e9rie de 64 LED ind\u00e9pendante. On peut faire un affichage en utilisant que les DELs souhait\u00e9s. On peut donc cibler une DEL en particulier en donnant ses coordonn\u00e9es en x et en y. Les lignes sont num\u00e9rot\u00e9es de haut en bas de 0 \u00e0 7 et les colonnes de gauche \u00e0 droite de 0 \u00e0 7 aussi. Donc la premi\u00e8re DEL en haut \u00e0 gauche \u00e0 les coordonn\u00e9es 0,0.</p> <p>La commande est <code>set_pixel(x, y, color)</code> o\u00f9 color repr\u00e9sente un tuple de couleur RGB.</p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# D\u00e9claration des couleurs\nrose = (255,0,255)\nblanc = (255,255,255)\n\n# Colore le pixel \u00e0 la position 2,3 en rose.\nsense.set_pixel(2,3,rose)\n</code></pre> <p>Ok maintenant je suis sur que vous voulez faire du \"pixel art\" avec le Sense Hat. Et bien sachez qu'il existe aussi la commande <code>set_pixels</code> qui nous permet de colorer toutes les DELs. La commande prend en param\u00e8tres une liste de couleur RGB (la liste commence en haut \u00e0 gauche et se d\u00e9roule ligne par ligne). Attention, la liste doit comporter les 64 couleurs.</p> <p>L'exemple provient de se site : https://projects.raspberrypi.org/en/projects/getting-started-with-the-sense-hat/5</p>"},{"location":"notes_de_cours/sense_hat/capteur/","title":"Les capteurs du Sense Hat","text":"<p>Comme nous l'avons vu, le Sense Hat poss\u00e8de plusieurs capteurs et la m\u00e9thode pour r\u00e9cup\u00e9rer les informations est assez simple: </p> <p>Exemple valeur capteurs<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# Valeur du capteur d'humidit\u00e9\nhumidite = sense.get_humidity()\n# Valeur du capteur de pression\npression = sense.get_pressure()\n# Valeur du capteur de temp\u00e9rature\ntemperature = sense.get_temperature()\n</code></pre> Parcontre dans cette exemple la lecture n'est prise qu'une fois. Si on voudrais avoir une lecture en continue on devrait utiliser une boucle de traitement.</p> <p>La temp\u00e9rature peut \u00eatre prise \u00e0 la fois par le capteur d'humidit\u00e9 et le capteur de pression. Il y a une fonction pour lire sur chacun d'eux : </p> Exemple capteur temp\u00e9rature<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# Temp\u00e9rature provenant du capteur d'humidit\u00e9\ntemp_humidite = sense.get_temperature_from_humidity()\n# Temp\u00e9rature provenant  du capteur de pression\ntemp_pression = sense.get_temperature_from_pressure()\n</code></pre> <p>La commande <code>sense.get_temperature()</code> est un raccourci de la commande <code>sense.get_temperature_from_humidity()</code></p> <p>Dans l'\u00e9mulateur de Sense Hat on peut simuler les valeurs lues par chaque capteur en jouant avec les barres d\u00e9filantes.</p>"},{"location":"notes_de_cours/sense_hat/couleur/","title":"Mettre un peu de couleur","text":"<p>On a d\u00e9j\u00e0 vu qu'avec les commandes show_message et show_letter ont peut afficher des caract\u00e8res. On peut aussi ajouter des param\u00e8tre pour modifier la couleur.</p> <p>Les couleurs seront exprim\u00e9es en RGB sous forme de tuple : (255,255,255) pour du blanc par exemple. Les deux commandes vont prendre en param\u00e8tre la couleur du texte et la couleur du fond (optionnelle).</p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# Affiche le message Hello World en rose sur fond blanc.\nsense.show_message(\"Hello World\", (255,0,255), (255,255,255))\n</code></pre> <p>Question de simplifier le code on peut mettre nos tuples de couleurs dans des variables qu'on r\u00e9utilise au besoin : </p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# D\u00e9claration des couleurs\nrose = (255,0,255)\nblanc = (255,255,255)\n\n# Affiche le message Hello World en rose sur fond blanc.\nsense.show_message(\"Hello World\", rose, blanc)\n</code></pre> <p>On peut aussi directement nommer le param\u00e8tre et lui donner la valeur. Le nom des param\u00e8tre est <code>text_colour</code> et <code>back_colour</code>. Par exemple je veux changer la couleur de fond de mon message mais conserver la couleur du texte par d\u00e9faut. Exemple de script Hello world<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# D\u00e9claration des couleurs\nrose = (255,0,255)\n\n# Affiche le message Hello World en rose sur fond blanc (couleur de fond par defaut).\nsense.show_message(\"Hello World\", text_colour=rose)\n</code></pre></p> <p>On peut aussi utiliser la commande <code>clear</code> pour appliquer une couleur \u00e0 toutes les DELs</p> Exemple de script Hello world<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\n# D\u00e9claration des couleurs\nrose = (255,0,255)\nbleu = (0,0,255)\n\n# Affiche le message Hello World en rose sur fond blanc.\nsense.show_message(\"Hello World\", text_colour=rose)\n# Ensuite l'\u00e9cran devient tout bleu\nsense.clear(bleu)\n</code></pre>"},{"location":"notes_de_cours/sense_hat/joystick/","title":"Utilisation du joystick","text":"<p>Le Sense Hat poss\u00e8de aussi un joystick qui nous permet de capter les touches haut, bas, gauche, droite ainsi qu'un clic. Ces touches sont aussi \"mapp\u00e9\" sur le clavier avec les fl\u00e8ches de directions et le clic par la touche entr\u00e9e. Quand une direction est d\u00e9tect\u00e9e, un \u00e9v\u00e8nement est lanc\u00e9 et est stock\u00e9 dans un objet \"event\". Pour capter ces \u00e9v\u00e8nements, on va dans notre boucle de traitement on va aller chercher les \u00e9v\u00e8nements avec la commande <code>sense.stick.get_events()</code>. Ensuite on pourra utiliser les propri\u00e9t\u00e9s suivantes de l'objet \"event\": </p> <ul> <li>direction : Obtenir la direction, donc la touche press\u00e9e (up, down, left, right, middle). Middle repr\u00e9sente le clic.</li> <li>action : Pour savoir si la touche est press\u00e9e ou rel\u00e2ch\u00e9e (pressed, released).</li> </ul> <p>Exemple, je veux d\u00e9clencher un traitement lorsque je clique sur le joystick : </p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nwhile True:\n    for event in sense.stick.get_events():\n        # Je v\u00e9rifie qu'il y a clic du joystick \n    # Attention appel\u00e9 quand appuy\u00e9 ET quand relach\u00e9\n        if event.direction == \"middle\":\n            # Mon traitement\n</code></pre>"},{"location":"notes_de_cours/sense_hat/joystick/#ecouter-un-evenement-du-joystick","title":"\u00c9couter un \u00e9v\u00e9nement du joystick","text":"<p>Il est aussi possible de \"brancher\" un \u00e9v\u00e9nement du joystick \u00e0 une fonction. Chaque direction \u00e0 une propri\u00e9t\u00e9 associ\u00e9e \u00e0 laquelle on donne la fonction: </p> <ul> <li><code>sense.stick.direction_up</code></li> <li><code>sense.stick.direction_down</code></li> <li><code>sense.stick.direction_left</code></li> <li><code>sense.stick.direction_right</code></li> <li><code>sense.stick.direction_middle</code></li> </ul> Exemple d'utilisation<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nrouge = (255, 0, 0)\n\ndef point_rouge():\n    sense.set_pixel(4,4,rouge)\n\n# On associe la fonction point_rouge au clic\nsense.stick.direction_middle = point_rouge\n\nwhile True:\n    # Ici le pass sert uniquement \u00e0 rester dans la boucle\n    # d\u00e8s que le bouton sera appuy\u00e9 la fonction va \u00eatre lanc\u00e9e.\n    pass\n</code></pre>"},{"location":"notes_de_cours/sense_hat/lancer_script/","title":"Interragir avec le Sense Hat","text":"<p>Il existe une librairie python pour travailler avec le Sense Hat. \u00c9tant donn\u00e9e qu'on n'utilisera pas sa version physique nous n'avons pas \u00e0 installer cette librairie.</p> <p>Le langage \u00e0 utiliser pour interragir avec Sense Hat est python. D\u00e8s que le carte physique est bien branch\u00e9 au Raspberry Pi (on dans notre cas l'\u00e9mulateur est lanc\u00e9), le Sense Hat est disponible.</p> <p>Nos scripts d\u00e9buteront avec l'importation de la librairie. </p> Importation de la librairie<pre><code># Si on utilise une carte Sense Hat \nfrom sense_hat import SenseHat\n# Si on utilise l'\u00e9mulateur \nfrom sense_emu import SenseHat\n</code></pre>"},{"location":"notes_de_cours/sense_hat/lancer_script/#utilisation-de-la-librairie","title":"Utilisation de la librairie","text":"<p>Apr\u00e8s avoir import\u00e9 la librairie, on va cr\u00e9er un objet SenseHat avec lequel on va travailler.</p> <pre><code># Cr\u00e9ation d'un objet SenseHat \nsense = SenseHat()\n</code></pre>"},{"location":"notes_de_cours/sense_hat/lancer_script/#afficher-du-texte","title":"Afficher du texte","text":"<p>Il y a deux commandes qui nous permettent d'afficher du texte facilement sur la s\u00e9rie de DEL.</p> <ul> <li><code>show_message()</code> : Qui nous permet d'afficher une chaine de texte, elle sera affich\u00e9 en mouvement de droite \u00e0 gauche. Le texte va disparaitre ensuite.</li> <li><code>show_letter()</code> : Affiche seulement un caract\u00e8re. Parcontre le caract\u00e8re reste affich\u00e9 \u00e0 l'\u00e9cran tant qu'on n'affiche rien d'autre.</li> </ul> <p>Astuce</p> <pre><code>On peut aussi \u00e0 tout moment effacer l'\u00e9cran avec la commande `sense.clear()`\n</code></pre> Exemple de script Hello world<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nsense.show_message(\"Hello World\")\n</code></pre>"},{"location":"notes_de_cours/sense_hat/lancer_script/#boucle-de-traitement","title":"Boucle de traitement","text":"<p>Quand le script est lanc\u00e9 sur le Sense Hat, il est ex\u00e9cut\u00e9 qu'une fois et ensuite s'arr\u00eate. Dans la grande majorit\u00e9 des cas ce n'est pas le comportement que l'on souhaite, surtout quand on va travailler avec les capteurs. Onn va donc prendre l'habitude de placer notre code dans une boucle de traitement qui va s'ex\u00e9cuter tant que le Sense Hat est sous tension. En python le plus simple est de faire une boucle infinie avec <code>while true</code> : </p> Exemple de boucle<pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nwhile True:\n    sense.show_message(\"Hello World\")\n</code></pre>"},{"location":"notes_de_cours/sense_hat/lancer_script/#utilisation-de-la-commande-sleep-pour-stopper-le-traitement","title":"Utilisation de la commande sleep pour stopper le traitement","text":"<p>Selon le traitement il peut \u00eatre n\u00e9cessaire de stopper le traitement de la boucle. Par exemple je veux afficher les chiffres de 1 \u00e0 3 en continue.</p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nwhile True:\n    sense.show_letter(\"1\")\n    sense.show_letter(\"2\")\n    sense.show_letter(\"3\")\n</code></pre> <p>Si je lance ce code, je vais n'avoir que le chiffre 3 d'affich\u00e9 en permanence. Pourquoi? Parce qu'\u00e0 chaque it\u00e9ration de la boucle, les trois chiffres sont affich\u00e9 trop rapidement pour le voir \u00e0 l'oeil et au final on ne voit que le dernier.</p> <p>La solution est de ralentir le traitement avec la commande sleep de python. Pour l'utiliser il faut importer la librairie time : </p> <pre><code>from time import sleep\n</code></pre> <p>Ensuite la commande <code>sleep</code> prend un nombre de seconde en param\u00e8tre qui correspond au temps d'arr\u00eat voulu. Ce nombre peut \u00eatre d\u00e9cimal. Reprenons le m\u00eame exemple mais cette fois avec la commande sleep : </p> <pre><code>from sense_emu import SenseHat\nsense = SenseHat()\n\nwhile True:\n    sense.show_letter(\"1\")\n    sleep(0.5)\n    sense.show_letter(\"2\")\n    sleep(0.5)\n    sense.show_letter(\"3\")\n    sleep(0.5)\n</code></pre> <p>Maintenant les chiffres vont d\u00e9filer l'un apr\u00e8s l'autre avec un intervalle de 0.5 seconde.</p>"},{"location":"notes_de_cours/sense_hat/sense_emu/","title":"Emulateur de Sense Hat","text":"<p>Il existe des \u00e9mulateurs de Sense Hat qui nous permet de cr\u00e9er des scripts et d'interragir avec les capteurs sans avoir besoin de poss\u00e9der la carte physiquement. </p> <p>Vous pouvez en trouver un en ligne \u00e0 l'adresse https://trinket.io/sense-hat. L'interface est assez simple. Vous \u00e9crivez votre code en python \u00e0 gauche et vous avez l'\u00e9mulation du Sense Hat \u00e0 droite.</p> <p></p> <p>Vous avez acc\u00e8s dans \u00e0 une version de l'\u00e9mulateur dans le syst\u00e8me d'exploitation Pi OS g\u00e9n\u00e9ralement install\u00e9 sur un Raspberry Pi. </p> <p></p> <p>Il n'est par contre pas install\u00e9 par d\u00e9faut dans la version lite ou r\u00e9guli\u00e8re. Si vous avez \u00e0 installer Pi OS, s\u00e9lectionnez la version full. Sinon il est toujours possible d'installer l'\u00e9mulateur sur une installation d\u00e9j\u00e0 existante avec les commandes : </p> <p>NOTES SEPT 2024: ne fonctionne pas avec la version actuelle de Pi OS (v12 - Bookworm) - utiliser la version en ligne</p> <pre><code>sudo apt-get update\nsudo apt-get install python-sense-emu python3-sense-emu sense-emu-tools\n</code></pre> <p>Attention</p> <pre><code>Si vous d\u00e9veloppez avec l'\u00e9mulateur, vos scripts python doivent importer sense_emu au lieu de sense_hat\n\n`from sense_emu import SenseHat`\n</code></pre>"},{"location":"notes_de_cours/sense_hat/sense_emu/#source","title":"Source","text":"<ul> <li>Emulateur en ligne</li> <li>Sense-emu</li> </ul>"},{"location":"notes_de_cours/sense_hat/sense_hat/","title":"Sense Hat","text":"<p>Le Sense Hat est un carte d'extension qu'on branche sur un Raspberry Pi (Hat est une abbr\u00e9viation qui signifie \"Hardware Attached on Top\") pour \u00e9tendre ses fonctionnalit\u00e9es gr\u00e2ce \u00e0 une s\u00e9rie de capteurs: </p> <ul> <li>Acc\u00e9l\u00e9rom\u00e8tre:  pour obtenir l'acc\u00e9l\u00e9ration du Pi, en calculer la vitesse et la position dans l'espace</li> <li>Gyroscope: pour capturez le mouvement de rotation du Raspberry Pi</li> <li>Magn\u00e9tom\u00e8tre: pour mesurer du champ magn\u00e9tique</li> <li>Capteur de pression d\u2019air</li> <li>Capteurs de temp\u00e9rature et d\u2019humidit\u00e9</li> </ul> <p>Pour terminer, le Sense Hat poss\u00e8de une matrice de LED 8x8 et un mini-joystick.</p> <p></p> <p>Info</p> <pre><code>\u00c0 l'origine le Sense Hat se nommait \"Astro Pi\" et avait \u00e9t\u00e9 d\u00e9velopp\u00e9 dans l'objectif d'envoyer des Raspberry Pi avec capteurs \u00e0 bord de la Station spatiale internationale (ISS).\n</code></pre>"},{"location":"notes_de_cours/sense_hat/sense_hat/#emulateur-de-sense-hat","title":"Emulateur de Sense Hat","text":"<p>Il existe des \u00e9mulateurs de Sense Hat qui nous permet de cr\u00e9er des scripts et d'interagir avec les capteurs sans avoir besoin de poss\u00e9der la carte physiquement. </p> <p>Vous pouvez en trouver un en ligne \u00e0 l'adresse https://trinket.io/sense-hat. L'interface est assez simple. Vous \u00e9crivez votre code en python \u00e0 gauche et vous avez l'\u00e9mulation du Sense Hat \u00e0 droite.</p> <p></p> <p>Vous avez acc\u00e8s dans \u00e0 une version de l'\u00e9mulateur dans le syst\u00e8me d'exploitation Pi OS g\u00e9n\u00e9ralement install\u00e9 sur un Raspberry Pi. Il n'est par contre pas install\u00e9 par d\u00e9faut dans la version lite ou r\u00e9guli\u00e8re. Si vous avez \u00e0 installer Pi OS, s\u00e9lectionnez la version full. Sinon il est toujours possible d'installer l'\u00e9mulateur sur une installation d\u00e9j\u00e0 existante avec les commandes : </p> <pre><code>sudo apt-get update\nsudo apt-get install python-sense-emu python3-sense-emu sense-emu-tools\n</code></pre> <p>NOTES SEPT 2024: ne fonctionne pas avec la version actuelle de Pi OS (v12 - Bookworm) - utiliser la version en ligne</p> <p>Attention</p> <pre><code>Si vous d\u00e9veloppez avec l'\u00e9mulateur, vos scripts python doivent importer sense_emu au lieu de sense_hat\n\n`from sense_emu import SenseHat`\n</code></pre>"},{"location":"notes_de_cours/sense_hat/sense_hat/#source","title":"Source","text":"<ul> <li>https://projects.raspberrypi.org/en/projects/getting-started-with-the-sense-hat/0</li> </ul>"}]}